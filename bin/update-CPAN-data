#!/usr/bin/env perl
use strict;
use warnings;
use JSON ();
use File::Slurp qw(read_file write_file);
use Digest::SHA;
use LWP::Simple qw(get);

my $json = JSON->new->pretty;

my %data;

{
    my $size_k = `du -sk CPAN` || 1;
    $size_k =~ s/\s+.*//sm;
    my $size_m = sprintf "%i", $size_k / 1024;
    my $size_g = sprintf "%.1f", $size_k / ( 1024 * 1024 );

    $data{disk_usage} = {
        #kb => $size_k,
        mb => $size_m,
        gb => $size_g,
    };
}

{
    my $mirrors = $json->decode( scalar read_file( 'CPAN/indices/mirrors.json' ) );
    $data{mirrors}->{count} = scalar @$mirrors;
}


my $tucs_data = get("http://search.cpan.org/api/cpan_stats")
    or die "Could not get stats from tucs";

my $tucs = $json->decode($tucs_data) or die "Could not decode stats from tucs";

$data{authors}->{count} = $tucs->{authors};
$data{modules}->{count} = $tucs->{modules};
$data{distributions}->{uploads}->{count} = $tucs->{uploads};
$data{distributions}->{count} = $tucs->{distributions};

write_file( "tmp/cpan-stats.json", $json->encode(\%data) );

my $sha_old = Digest::SHA->new;
my $sha_new = Digest::SHA->new;

$sha_old->addfile("CPAN/indices/cpan-stats.json");
$sha_new->addfile("tmp/cpan-stats.json");

exit 0 if $sha_old->hexdigest eq $sha_new->hexdigest;

rename "tmp/cpan-stats.json", "CPAN/indices/cpan-stats.json"
  or die "Could not rename tmp file: $!";

